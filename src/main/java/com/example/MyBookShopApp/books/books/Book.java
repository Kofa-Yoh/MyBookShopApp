package com.example.MyBookShopApp.books.books;

import com.example.MyBookShopApp.author.Author;
import com.example.MyBookShopApp.author.Book2Author;
import com.example.MyBookShopApp.books.assessments.BookAssessment;
import com.example.MyBookShopApp.books.bookfiles.BookFile;
import com.example.MyBookShopApp.books.genre.Genre;
import com.example.MyBookShopApp.books.reviews.BookReview;
import com.example.MyBookShopApp.books.tags.Tag;
import com.example.MyBookShopApp.books.usersbooks.Book2User;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.util.*;
import java.util.stream.Collectors;

@Schema(description = "Book object")
@Entity
@Table(name = "books")
@Getter
@Setter
public class Book {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @JsonProperty(value = "id", required = true, index = 1)
    @Schema(description = "Unique identifier of the Book, generated by db automatically",
            example = "1")
    private Integer id;

    @Column(name = "pub_date")
    @Schema(description = "Date of the book publication")
    private Date pubDate;

    @Column(name = "is_bestseller")
    @Schema(description = "1 - the book is considered to be bestseller,\n 0 - the book not a bestseller")
    private Integer isBestseller;

    @Schema(description = "Mnemonical identity sequence of characters",
            format = "book-@@@-###",
            example = "book-wly-166")
    private String slug;

    @JsonProperty(value = "title", required = true)
    @Schema(description = "Name of the title",
            example = "Java")
    private String title;

    private String image;

    @Column(columnDefinition = "TEXT")
    private String description;

    @Column(name = "price")
    @JsonProperty(value = "price")
    private Integer priceOld;

    @Column(name = "discount")
    @JsonProperty(value = "discount")
    private Double price;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    Set<Book2Author> book2Authors;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    List<BookFile> bookFileList = new ArrayList<>();

    @ManyToMany
    @JsonIgnore
    @JoinTable(
            name = "books_tags",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "tag_id"))
    private Set<Tag> tags;

    @ManyToMany
    @JsonIgnore
    @JoinTable(
            name = "books_genres",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "genre_id"))
    private Set<Genre> genres;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<Book2User> book2users = new ArrayList<>();

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookReview> bookReviews = new ArrayList<>();

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookAssessment> bookRate = new ArrayList<>();

    @JsonProperty(value = "discountPercent")
    public Integer getDiscountPercent() {
        return (int) Math.floor(price * 100);
    }

    @JsonProperty(value = "discountPrice")
    public Integer getPriceWithDiscount() {
        return Math.toIntExact(Math.round(priceOld * (1 - price)));
    }

    @JsonProperty(value = "authors")
    public String getBookAuthors() {
        return book2Authors.stream()
                .sorted(Comparator.comparing(Book2Author::getSortIndex))
                .map(book2Author -> book2Author.getAuthor().getName())
                .collect(Collectors.joining(", "));
    }

    @JsonProperty(value = "authorsList")
    public List<Author> getBookAuthorsList() {
        return book2Authors.stream()
                .sorted(Comparator.comparing(Book2Author::getSortIndex))
                .map(book2Author -> book2Author.getAuthor())
                .toList();
    }

    @Override
    public String toString() {
        return "Book{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", priceOld='" + priceOld + '\'' +
                ", price='" + price + '\'' +
                '}';
    }
}
